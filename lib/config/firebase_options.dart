// File generated by FlutterFire CLI.
// ignore_for_file: lines_longer_than_80_chars, avoid_classes_with_only_static_members
import 'package:firebase_core/firebase_core.dart' show FirebaseOptions;
import 'package:flutter/foundation.dart'
    show defaultTargetPlatform, kIsWeb, TargetPlatform;
import 'package:flutter_dotenv/flutter_dotenv.dart';

class DefaultFirebaseOptions {
  static FirebaseOptions get currentPlatform {
    if (kIsWeb) {
      return web;
    }
    switch (defaultTargetPlatform) {
      case TargetPlatform.android:
        return android;
      case TargetPlatform.iOS:
        return ios;
      case TargetPlatform.macOS:
        throw UnsupportedError(
          'DefaultFirebaseOptions belum dikonfigurasi untuk macos - '
          'Anda perlu menambahkan konfigurasi di firebase-options.dart',
        );
      case TargetPlatform.windows:
        throw UnsupportedError(
          'DefaultFirebaseOptions belum dikonfigurasi untuk windows - '
          'Anda perlu menambahkan konfigurasi di firebase-options.dart',
        );
      case TargetPlatform.linux:
        throw UnsupportedError(
          'DefaultFirebaseOptions belum dikonfigurasi untuk linux - '
          'Anda perlu menambahkan konfigurasi di firebase-options.dart',
        );
      default:
        throw UnsupportedError(
          'DefaultFirebaseOptions tidak didukung untuk platform ini.',
        );
    }
  }

  static FirebaseOptions get web {
    return FirebaseOptions(
      apiKey: dotenv.env['FIREBASE_WEB_API_KEY'] ?? 'YOUR-WEB-API-KEY',
      appId: dotenv.env['FIREBASE_WEB_APP_ID'] ?? 'YOUR-WEB-APP-ID',
      messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID'] ?? 'YOUR-SENDER-ID',
      projectId: dotenv.env['FIREBASE_PROJECT_ID'] ?? 'YOUR-PROJECT-ID',
      authDomain: dotenv.env['FIREBASE_WEB_AUTH_DOMAIN'] ?? 'YOUR-AUTH-DOMAIN',
      storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET'] ?? 'YOUR-STORAGE-BUCKET',
    );
  }

  static FirebaseOptions get android {
    return FirebaseOptions(
      apiKey: dotenv.env['FIREBASE_ANDROID_API_KEY'] ?? 'YOUR-ANDROID-API-KEY',
      appId: dotenv.env['FIREBASE_ANDROID_APP_ID'] ?? 'YOUR-ANDROID-APP-ID',
      messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID'] ?? 'YOUR-SENDER-ID',
      projectId: dotenv.env['FIREBASE_PROJECT_ID'] ?? 'YOUR-PROJECT-ID',
      storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET'] ?? 'YOUR-STORAGE-BUCKET',
    );
  }

  static FirebaseOptions get ios {
    return FirebaseOptions(
      apiKey: dotenv.env['FIREBASE_IOS_API_KEY'] ?? 'YOUR-IOS-API-KEY',
      appId: dotenv.env['FIREBASE_IOS_APP_ID'] ?? 'YOUR-IOS-APP-ID',
      messagingSenderId: dotenv.env['FIREBASE_MESSAGING_SENDER_ID'] ?? 'YOUR-SENDER-ID',
      projectId: dotenv.env['FIREBASE_PROJECT_ID'] ?? 'YOUR-PROJECT-ID',
      storageBucket: dotenv.env['FIREBASE_STORAGE_BUCKET'] ?? 'YOUR-STORAGE-BUCKET',
      iosClientId: dotenv.env['FIREBASE_IOS_CLIENT_ID'] ?? 'YOUR-IOS-CLIENT-ID',
      iosBundleId: dotenv.env['FIREBASE_IOS_BUNDLE_ID'] ?? 'YOUR-IOS-BUNDLE-ID',
    );
  }
} 